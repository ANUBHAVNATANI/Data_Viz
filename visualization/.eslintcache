[{"D:\\iviz\\Data_Viz\\visualization\\src\\index.js":"1","D:\\iviz\\Data_Viz\\visualization\\src\\App.js":"2","D:\\iviz\\Data_Viz\\visualization\\src\\IndiaMap.js":"3","D:\\iviz\\Data_Viz\\visualization\\src\\TimeViz.js":"4"},{"size":198,"mtime":1608488908332,"results":"5","hashOfConfig":"6"},{"size":252,"mtime":1608495397735,"results":"7","hashOfConfig":"6"},{"size":2372,"mtime":1608544700418,"results":"8","hashOfConfig":"6"},{"size":1813,"mtime":1608543498413,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"n9vks4",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"D:\\iviz\\Data_Viz\\visualization\\src\\index.js",[],["22","23"],"D:\\iviz\\Data_Viz\\visualization\\src\\App.js",["24","25"],"import React, { useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nimport IndiaMap from \"./IndiaMap\";\nimport TimeViz from \"./TimeViz\";\n\nfunction App() {\n  return (\n    <div>\n      <IndiaMap />\n      <TimeViz />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\iviz\\Data_Viz\\visualization\\src\\IndiaMap.js",["26"],"import React, { useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nfunction IndiaMap() {\r\n  useEffect(() => {\r\n    createChart();\r\n  }, []);\r\n\r\n  function showData(data) {\r\n    let mapInfo = data[0];\r\n    let dropOutData = data[1];\r\n    let container = d3.select(\"#container\");\r\n    let bodyHeight = 1000;\r\n    let bodyWidth = 1000;\r\n    let projection = d3\r\n      .geoMercator()\r\n      .center(d3.geoCentroid(mapInfo))\r\n      .translate([bodyWidth / 2, bodyHeight / 2])\r\n      .scale(1000);\r\n    let states = {};\r\n    let statesName = [];\r\n    for (let { State_UT, year, Avg } of dropOutData) {\r\n      //   console.log({ State_UT, year, All_Schools });\r\n      if (State_UT in states) {\r\n        states[State_UT][year] = +Avg;\r\n      } else {\r\n        states[State_UT] = { [year]: +Avg };\r\n      }\r\n    }\r\n\r\n    mapInfo.features = mapInfo.features.map((d) => {\r\n      let state = d.properties.NAME_1;\r\n      statesName.push(state);\r\n      let dropOutRate = states[state];\r\n      d.properties.dropOutRate = dropOutRate[\"2014-15\"];\r\n      return d;\r\n    });\r\n\r\n    let cScale = d3.scaleOrdinal().domain(statesName).range(d3.schemePaired);\r\n    let div = d3\r\n      .select(\"body\")\r\n      .append(\"div\")\r\n      .attr(\"class\", \"tooltip\")\r\n      .style(\"opacity\", 0);\r\n    let path = d3.geoPath().projection(projection);\r\n    container\r\n      .selectAll(\"path\")\r\n      .data(mapInfo.features)\r\n      .enter()\r\n      .append(\"path\")\r\n      .attr(\"d\", (d) => path(d))\r\n      .attr(\"stroke\", \"black\")\r\n      .attr(\"fill\", (d) => cScale(d.properties.NAME_1))\r\n      .on(\"mouseover\", function (d, i) {\r\n        d3.select(this).transition().duration(300).style(\"opacity\", 0.5);\r\n        console.log(\"Here\");\r\n        div.transition().duration(300).style(\"opacity\", 0);\r\n        div.text(d.properties.NAME_1 + \": \" + d.properties.dropOutRate);\r\n      })\r\n      .on(\"mouseout\", function (d, i) {\r\n        console.log(\"there\");\r\n        d3.select(this).transition().duration(300).style(\"opacity\", 0.5);\r\n        div.transition().duration(300).style(\"opacity\", 0);\r\n      });\r\n  }\r\n\r\n  const createChart = () => {\r\n    Promise.all([\r\n      d3.json(\"./data/india_state.json\"),\r\n      d3.csv(\"./data/drop_out_rate.csv\"),\r\n    ]).then(showData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <svg id=\"container\" height=\"1000\" width=\"1000\"></svg>\r\n    </div>\r\n  );\r\n}\r\nexport default IndiaMap;\r\n","D:\\iviz\\Data_Viz\\visualization\\src\\TimeViz.js",["27"],"import React, { useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nfunction TimeViz() {\r\n  useEffect(() => {\r\n    createChart();\r\n  }, []);\r\n\r\n  const showData = (dataSources) => {\r\n    let container = d3.select(\"#timeContainer\");\r\n    let bodyWidth = 400;\r\n    let bodyHeight = 400;\r\n\r\n    let boys_toilet = dataSources[0];\r\n\r\n    let states = {};\r\n\r\n    // console.log(boys_toilet);\r\n    for (let { State_UT, year, All_Schools } of boys_toilet) {\r\n      //   console.log({ State_UT, year, All_Schools });\r\n      if (State_UT in states) {\r\n        states[State_UT][year] = All_Schools;\r\n      } else {\r\n        states[State_UT] = { [year]: All_Schools };\r\n      }\r\n    }\r\n    //console.log(states);\r\n\r\n    boys_toilet = boys_toilet.map((d) => ({\r\n      All_Schools: +d.All_Schools,\r\n      year: d.year,\r\n    }));\r\n\r\n    let max_toilet = d3.max(boys_toilet, (d) => d.All_Schools);\r\n\r\n    let yScale = d3\r\n      .scaleLinear()\r\n      .domain([0, max_toilet])\r\n      .range([bodyHeight, 0]);\r\n\r\n    let xScale = d3\r\n      .scaleTime()\r\n      .domain(d3.extent(boys_toilet, (d) => d.All_Schools))\r\n      .range([0, bodyWidth]);\r\n\r\n    container.append(\"g\").call(d3.axisLeft(yScale));\r\n    container\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + bodyHeight + \")\")\r\n      .call(d3.axisBottom(xScale));\r\n\r\n    let valueLine = d3\r\n      .line()\r\n      .x((d) => xScale(d.All_Schools))\r\n      .y((d) => yScale(d.year));\r\n\r\n    container\r\n      .append(\"path\")\r\n      .datum(boys_toilet)\r\n      .attr(\"d\", valueLine)\r\n      .attr(\"class\", \"line\");\r\n  };\r\n\r\n  const createChart = () => {\r\n    Promise.all([d3.csv(\"./data/school boys toilet.csv\")]).then(showData);\r\n  };\r\n\r\n  return (\r\n    <svg id=\"timeContainer\" height=\"400\" width=\"400\">\r\n      hello\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default TimeViz;\r\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":17,"nodeType":"34","messageId":"35","endLine":1,"endColumn":26},{"ruleId":"32","severity":1,"message":"36","line":2,"column":13,"nodeType":"34","messageId":"35","endLine":2,"endColumn":15},{"ruleId":"37","severity":1,"message":"38","line":7,"column":6,"nodeType":"39","endLine":7,"endColumn":8,"suggestions":"40"},{"ruleId":"37","severity":1,"message":"38","line":7,"column":6,"nodeType":"39","endLine":7,"endColumn":8,"suggestions":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'d3' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'createChart'. Either include it or remove the dependency array.","ArrayExpression",["44"],["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},{"desc":"46","fix":"48"},"Update the dependencies array to be: [createChart]",{"range":"49","text":"50"},{"range":"51","text":"50"},[141,143],"[createChart]",[140,142]]